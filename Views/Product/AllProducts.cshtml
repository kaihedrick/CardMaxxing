@model IEnumerable<ProductModel>

@{
    ViewData["Title"] = "All Products";
    var cart = ViewBag.Cart as List<OrderItemsModel> ?? new List<OrderItemsModel>(); // ✅ Use ViewBag to access the cart
}

<div class="container mt-5">
    <div class="row justify-content-center">
        @foreach (var product in Model)
        {
            var cartItem = cart?.FirstOrDefault(ci => ci.ProductID == product.ID);
            int quantity = cartItem?.Quantity ?? 0;

            <div class="col-md-4 mb-4">
                <div class="card shadow-lg rounded-4 p-3 text-center bg-light position-relative">

                    <!-- Product Name & Description -->
                    <h5 class="fw-bold">@product.Name</h5>
                    <p class="text-muted">@product.Description</p>

                    <!-- Product Image -->
                    <img src="@product.ImageUrl" class="img-fluid rounded shadow-sm" alt="@product.Name"
                         style="max-height: 120px; object-fit: contain;">

                    <!-- Product Price -->
                    <p class="mt-2 fw-bold text-success">$@product.Price.ToString("0.00")</p>

                    <!-- Action Controls Based on Role -->
                    <div class="d-flex justify-content-between align-items-center px-3 mt-3">

                        @if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("EditProduct", "Product", new { id = product.ID })" class="text-primary">
                                <i class="fas fa-cog fa-2x"></i> <!-- Edit Icon -->
                            </a>
                        }

                        @if (User.IsInRole("User"))
                        {
                            <!-- Only Users Can Add or Remove from Cart -->
                            <div class="d-flex align-items-center">
                                <button class="btn btn-sm btn-outline-danger quantity-btn" onclick="updateCart('@product.ID', 'remove')">
                                    <i class="fas fa-minus"></i>
                                </button>

                                <span id="quantity-@product.ID" class="mx-2 fw-bold">@quantity</span>

                                <button class="btn btn-sm btn-outline-success quantity-btn" onclick="updateCart('@product.ID', 'add')">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function updateCart(productId, action) {
            fetch(`/User/UpdateCart`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId: productId, action: action })  // ✅ Sending JSON payload
            })
                .then(response => response.json())
                .then(data => {
                    let quantityElement = document.getElementById(`quantity-${productId}`);
                    if (quantityElement) {
                        quantityElement.innerText = data.quantity;  // ✅ Dynamically update quantity
                    }
                })
                .catch(error => console.error("Error updating cart:", error));
        }
    </script>
}
